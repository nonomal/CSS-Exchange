<?xml version="1.0" encoding="UTF-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <!--
  We need this so that the owa\calendar vdir can share the same physical path, but still be "independent"
  -->
  <location inheritInChildApplications="false">
    <system.webServer>
      <serverRuntime appConcurrentRequestLimit="65535" uploadReadAheadSize="0" />
      <modules>
        <!-- Standard set of module removes for reducing per-request memory footprint and to reduce native/managed context switches -->
        <remove name="CustomErrorModule" />
        <remove name="DefaultAuthentication" />
        <remove name="DirectoryListingModule" />
        <remove name="DynamicCompressionModule" />
        <remove name="FileAuthorization" />
        <remove name="FormsAuthentication" />
        <remove name="HttpCacheModule" />
        <remove name="OutputCache" />
        <remove name="Profile" />
        <remove name="RequestFilteringModule" />
        <remove name="RoleManager" />
        <remove name="ScriptModule-4.0" />
        <remove name="ServiceModel" />
        <remove name="ServiceModel-4.0" />
        <remove name="Session" />
        <remove name="StaticCompressionModule" />
        <remove name="UrlAuthorization" />
        <remove name="UrlMappingsModule" />
        <remove name="UrlRoutingModule-4.0" />
        <!-- Keep the HostHeaderValidationModule first - it prevents excessive and unnecessary Watsons that result from bogus host headers -->
        <add name="HostHeaderValidationModule" type="Microsoft.Exchange.HttpUtilities.HostHeaderValidationModule, Microsoft.Exchange.HttpUtilities, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="HttpRequestFilteringModule" type="Microsoft.Exchange.HttpRequestFiltering.HttpRequestFilteringModule, Microsoft.Exchange.HttpRequestFiltering, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="OwaPltInfoModule" type="Microsoft.Exchange.HttpUtilities.OwaPltInfoModule, Microsoft.Exchange.HttpUtilities, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="HttpProxy" type="Microsoft.Exchange.HttpProxy.FbaModule,Microsoft.Exchange.FrontEndHttpProxy,Version=15.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35" preCondition="" />
        <add name="cafe_exppw" />
      </modules>
      <httpErrors existingResponse="PassThrough">
        <remove statusCode="500" subStatusCode="-1" />
        <remove statusCode="503" subStatusCode="-1" />
        <remove statusCode="404" subStatusCode="-1" />
        <error statusCode="404" path="/owa/auth/errorFE.aspx?httpCode=404" responseMode="ExecuteURL" />
        <error statusCode="500" path="/owa/auth/errorFE.aspx?httpCode=500" responseMode="ExecuteURL" />
        <error statusCode="503" path="/owa/auth/errorFE.aspx?httpCode=503" responseMode="ExecuteURL" />
      </httpErrors>
      <security>
        <requestFiltering>
          <requestLimits maxAllowedContentLength="35000000" />
        </requestFiltering>
      </security>
      <httpProtocol>
        <customHeaders>
          <add name="X-FEServer" value="SOLO-E16A" />
        </customHeaders>
      </httpProtocol>
    </system.webServer>
    <system.web>
      <machineKey validationKey="AutoGenerate,IsolateApps" />
      <compilation defaultLanguage="c#" debug="false">
        <assemblies>
          <!-- Any assembly not in the GAC or the owa\bin folder that is referenced from an aspx page needs to be
                added here.  An assembly can be referenced by an aspx page through a namespace import or through usage
                of a method or property that returns a type from that assembly.  aspx page compilation is similar to
                regular c# compilation where any assembly that is referenced in the code needs to be provided to the
                compiler at compile time.  These entries are our means of providing additional assembly references to
                the compiler.  All assemblies in the GAC and owa\bin are referenced automatically.
                -->
          <add assembly="Microsoft.Exchange.Clients.Strings, Version=15.0.0.0, Culture=neutral, publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.Directory, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Clients.Common, Version=15.0.0.0,Culture=neutral, publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Clients.Security, Version=15.0.0.0, Culture=neutral, publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.FrontEndHttpProxy, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.HttpProxy.Common, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.HttpRequestFiltering, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Security, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        </assemblies>
      </compilation>
      <!-- Configure the custom Request Validator for WIF to allow processing of XML based ADFS tokens which would normally be rejected by default in ASP.Net
			This validator only runs for requests from the trusted ADFS that contain the tokens. All other requests use default validation 
			This request validator will not run if ADFS Authentication Module is not enabled. -->
      <httpRuntime maxUrlLength="500" maxRequestLength="35000" requestValidationMode="2.0" requestValidationType="Microsoft.Exchange.Security.Authentication.AdfsRequestValidator" relaxedUrlToFileSystemMapping="true" />
      <pages validateRequest="false" />
      <customErrors defaultRedirect="/owa/auth/errorFE.aspx" mode="RemoteOnly">
        <error statusCode="500" redirect="/owa/auth/errorFE.aspx?httpCode=500" />
        <error statusCode="503" redirect="/owa/auth/errorFE.aspx?httpCode=503" />
        <error statusCode="404" redirect="/owa/auth/errorFE.aspx?httpCode=404" />
      </customErrors>
    </system.web>
  </location>
  <appSettings>
    <add key="HttpProxy.ProtocolType" value="Owa" />
  </appSettings>
  <!-- Service binding for basic LiveIDAuth to proxy OWA Mini to Exchange 14 -->
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="SecureBinding" maxConnections="100000">
          <security mode="Transport">
            <transport protectionLevel="EncryptAndSign" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:1009/Microsoft.Exchange.Security.Authentication.FederatedAuthService" binding="netTcpBinding" bindingConfiguration="SecureBinding" contract="Microsoft.Exchange.Security.Authentication.FederatedAuthService.IAuthService" name="Microsoft.Exchange.Security.Authentication.FederatedAuthService" />
    </client>
  </system.serviceModel>
  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
    <linkedConfiguration href="file://C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\SharedWebConfig.config" />
  </assemblyBinding>
</configuration>