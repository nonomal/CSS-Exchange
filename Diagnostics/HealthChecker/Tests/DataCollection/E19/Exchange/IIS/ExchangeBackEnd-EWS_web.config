<?xml version="1.0" encoding="utf-8"?>
<!-- Note: As an alternative to hand editing this file you can use the web admin tool to
         configure settings for your application. Use the Website->Asp.Net Configuration option
         in Visual Studio.
     A full list of settings and comments can be found in machine.config.comments usually
     located in \Windows\Microsft.Net\Frameworks\v2.x\Config -->
<configuration>
  <configSections>
    <section name="ExchangeDiagnosticsSection" type="Microsoft.Exchange.Data.ApplicationLogic.ExchangeDiagnosticsSection, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <ExchangeDiagnosticsSection>
    <DiagnosticsComponents>
      <DiagnosticsComponent name="ProcessInfo" implementation="Microsoft.Exchange.Data.ApplicationLogic.CommonHandlers.ProcessDiagnosticsInfoManager, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="UserWorkloadManager" implementation="Microsoft.Exchange.WorkloadManagement.UserWorkloadManagerHandler, Microsoft.Exchange.WorkloadManagement, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="IdMetadata" implementation="Microsoft.Exchange.Services.Diagnostics.IdMetadataDiagnosticsHandler, Microsoft.Exchange.Services, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="EwsBudgetCache" implementation="Microsoft.Exchange.Services.Diagnostics.EwsBudgetCacheHandler, Microsoft.Exchange.Services, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="MailApps" implementation="Microsoft.Exchange.Data.ApplicationLogic.Extension.MailAppsDiagnosticsHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GetConditionMetadata" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.GetConditionMetadataHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RegisterCondition" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.RegisterConditionHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RemoveCondition" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.RemoveConditionHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RegisterStreamingSubscriptionListener" implementation="Microsoft.Exchange.Services.Diagnostics.RegisterStreamingSubscriptionListener, Microsoft.Exchange.Services, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="QueryDiagnosticsHandler" implementation="Microsoft.Exchange.Services.Core.ServiceCommands.ExecuteSearch.QueryDiagnosticsHandler, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RelevancyDataCache" implementation="Microsoft.Exchange.Query.Ranking.Diagnostics.RelevancyDataCacheDiagnosticsHandler, Microsoft.Exchange.Query.Ranking, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GlobalSettingsHandler" implementation="Microsoft.Exchange.Services.Diagnostics.GlobalSettingsHandler, Microsoft.Exchange.Services, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="TypeDeserializationLog" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.TypeDeserializationLogHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
    </DiagnosticsComponents>
  </ExchangeDiagnosticsSection>
  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
    <linkedConfiguration href="file://C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\SharedWebConfig.config" />
  </assemblyBinding>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\System.Spatial.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.Edm.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.OData.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Services.Client" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.Services.Client.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <appSettings>
    <add key="TokenBasedBudget.WindowLengthInSeconds" value="60" />
    <add key="EncodeStringProperties" value="false" />
    <add key="LiveIdBasicAuthModule.ApplicationName" value="Microsoft.Exchange.WebServices" />
    <add key="LiveIdBasicAuthenticator.RehydrateLiveIdIdentity" value="true" />
    <add key="OAuthHttpModule.ConvertToSidBasedIdentity" value="true" />
    <add key="AddAggregatedAccount.MaxAggregatedAccountsAllowed" value="10" />
    <!-- Budget action maximum elapsed times before logging -->
    <add key="HangingConnection_MaxTimeInMinutes" value="60" />
    <add key="XmlMaxBytesPerRead" value="10485760" />
    <!-- Setting for whether online meetings is enabled. -->
    <add key="IsOnlineMeetingEnabled" value="true" />
    <add key="OnlineMeetingExternalAutodiscoverPrefix" value="lyncdiscover" />
    <add key="OnlineMeetingInternalAutodiscoverPrefix" value="lyncdiscoverinternal" />
    <add key="DisableReferenceAttachment" value="false" />
    <!-- Timeout for E-Discovery application making EWS call on a remote archive mailbox -->
    <add key="RemoteEwsClientTimeout" value="540000" />
    <!-- Available settings for the Account Aggregation OpenTenantManager -->
    <!--
        <add key="OpenTenantManager.ActiveTenantLifespan_Hours" value="24" />
        <add key="OpenTenantManager.ActiveTenantVacancyEvaluationInterval_Minutes" value="5" />
        <add key="OpenTenantManager.MaximumUsersPerTenantThreshold" value="100000" />
        <add key="OpenTenantManager.MinimumDelayBetweenFailedEvaluations_Seconds" value="10" />
        -->
    <!-- Settings for performance optimization-->
    <!--Use GC.Collect to recover from aggressive XmlReader allocations-->
    <add key="UseGcCollect" value="true" />
    <!--Size of CreateItem message to trigger GC.Collect processing-->
    <add key="CreateItemRequestSizeThreshold" value="5120000" />
    <!--Size of PrivateWorkingSetto trigger GC.Collect processing-->
    <add key="PrivateWorkingSetThreshold" value="716800000" />
    <!--Minimum interval to wait between GC.Collect calls-->
    <add key="CollectIntervalInMilliseconds" value="120000" />
    <!-- Specifies the type of protocol that RUM should register itself as. -->
    <add key="RoutingUpdateModule.ProtocolType" value="EWS" />
    <!-- PSDirectInvoke settings -->
    <add key="PSDirectInvokeEnabledModules" value="Logging,LatencyTracker" />
    <!-- Sync delivery status client enabled setting for unified groups -->
    <!-- this is not replacement of flight, it is used to make sure it enables only on MSExchangeServicesAppPool process -->
    <add key="IsEwsAppPool" value="true" />
  </appSettings>
  <connectionStrings />
  <system.web>
    <httpRuntime maxRequestLength="2097151" maxUrlLength="2048" />
    <httpHandlers>
      <remove path="*.asmx" verb="*">
      </remove>
      <add path="*.asmx" verb="*" type="System.ServiceModel.Activation.ServiceHttpHandlerFactory, System.ServiceModel.Activation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" validate="false" preCondition="integratedMode" />
    </httpHandlers>
    <compilation>
      <buildProviders>
        <remove extension=".asmx" />
        <add extension=".asmx" type="System.ServiceModel.Activation.ServiceBuildProvider, System.ServiceModel.Activation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </buildProviders>
      <assemblies>
        <add assembly="Microsoft.Exchange.Security, Version=15.0.0.0, Culture=neutral, publicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <customErrors mode="On" />
  </system.web>
  <system.serviceModel>
    <services>
      <service name="Microsoft.Exchange.Services.Wcf.EWSService" behaviorConfiguration="EWSServiceBehavior">
        <!-- For streamed transfer mode, we need a different endpoint address with /s/. -->
        <endpoint address="s" behaviorConfiguration="MultiReceive" binding="webHttpBinding" bindingConfiguration="EWSStreamingNegotiateHttpsBinding" name="Https" contract="Microsoft.Exchange.Services.Wcf.IEWSStreamingContract" />
        <endpoint address="s" behaviorConfiguration="MultiReceive" binding="webHttpBinding" bindingConfiguration="EWSStreamingNegotiateHttpBinding" name="Http" contract="Microsoft.Exchange.Services.Wcf.IEWSStreamingContract" />
        <endpoint address="" behaviorConfiguration="MultiReceive" binding="customBinding" bindingConfiguration="EWSAnonymousHttpsBinding" name="Https" contract="Microsoft.Exchange.Services.Wcf.IEWSContract" />
        <endpoint address="" behaviorConfiguration="MultiReceive" binding="customBinding" bindingConfiguration="EWSAnonymousHttpBinding" name="Http" contract="Microsoft.Exchange.Services.Wcf.IEWSContract" />
                <endpoint binding="customBinding" bindingConfiguration="EWSWSSecurityHttpBinding" contract="Microsoft.Exchange.Services.Wcf.IEWSContract" address="wssecurity" />
                <endpoint binding="customBinding" bindingConfiguration="EWSWSSecurityHttpsBinding" contract="Microsoft.Exchange.Services.Wcf.IEWSContract" address="wssecurity" />
      </service>
      <service name="Microsoft.Exchange.UM.ClientAccess.UMWebService" behaviorConfiguration="UMServiceBehavior">
        <endpoint address="" behaviorConfiguration="MultiReceive" binding="customBinding" bindingConfiguration="UMLegacyHttpsBinding" contract="Microsoft.Exchange.Services.Wcf.IUM12LegacyContract" />
        <endpoint address="" behaviorConfiguration="MultiReceive" binding="customBinding" bindingConfiguration="UMLegacyHttpBinding" contract="Microsoft.Exchange.Services.Wcf.IUM12LegacyContract" />
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="MultiReceive">
          <dispatcherSynchronization maxPendingReceives="30" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="EWSServiceBehavior">
          <serviceMetadata httpsGetEnabled="true" httpGetEnabled="true" externalMetadataLocation="../Services.wsdl" />
          <serviceAuthorization serviceAuthorizationManagerType="Microsoft.Exchange.Services.Wcf.EWSAuthorizationManager, Microsoft.Exchange.Services.Wcf, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
          <serviceThrottling maxConcurrentCalls="2147483647" />
          <EWSServiceCredentials>
            <issuedTokenAuthentication certificateValidationMode="None" audienceUriMode="Never">
              <knownCertificates />
            </issuedTokenAuthentication>
            <clientCertificate>
              <authentication certificateValidationMode="Custom" customCertificateValidatorType="Microsoft.Exchange.Services.WCF.EWSX509CertificateValidator, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
            </clientCertificate>
          </EWSServiceCredentials>
        </behavior>
        <behavior name="UMServiceBehavior">
          <serviceAuthorization serviceAuthorizationManagerType="Microsoft.Exchange.Services.Wcf.UMAuthorizationManager, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <netTcpBinding>
        <binding name="SecureBinding" maxConnections="100000">
          <security mode="Transport">
            <transport protectionLevel="EncryptAndSign" />
          </security>
        </binding>
      </netTcpBinding>
      <customBinding>
        <binding name="EWSAnonymousHttpsBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpsTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSAnonymousHttpBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSBasicHttpsBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpsTransport authenticationScheme="Basic" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSBasicHttpBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpTransport authenticationScheme="Basic" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSNegotiateHttpsBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpsTransport authenticationScheme="Negotiate" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSNegotiateHttpBinding">
          <EWSMessageEncoderSoap11Element />
          <!-- Since we are using a transfer mode of "streamed" maxBufferSize can be used to limit the size of
                    the SOAP header section since that is the only thing that is buffered when receiving a streamed message. -->
          <httpTransport authenticationScheme="Negotiate" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecurityHttpsBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="IssuedTokenOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
            <issuedTokenParameters keyType="BearerKey" />
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpsTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecurityHttpBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="IssuedTokenOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
            <issuedTokenParameters keyType="BearerKey" />
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecuritySymmetricKeyHttpsBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="IssuedTokenOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
            <issuedTokenParameters keyType="SymmetricKey" />
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpsTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecuritySymmetricKeyHttpBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="IssuedTokenOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
            <issuedTokenParameters keyType="SymmetricKey" />
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecurityX509CertHttpsBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="CertificateOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpsTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="EWSWSSecurityX509CertHttpBinding">
          <transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />
          <security authenticationMode="CertificateOverTransport" defaultAlgorithmSuite="TripleDes" includeTimestamp="false" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" securityHeaderLayout="Strict">
          </security>
          <EWSSecurityBindingElement />
          <EWSMessageEncoderSoap11WSAddressing10Element />
          <httpTransport authenticationScheme="Anonymous" maxReceivedMessageSize="67108864" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="UMLegacyHttpsBinding">
          <UMLegacyMessageEncoderSoap11Element />
          <httpsTransport authenticationScheme="Anonymous" maxReceivedMessageSize="1048576" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
        <binding name="UMLegacyHttpBinding">
          <UMLegacyMessageEncoderSoap11Element />
          <httpTransport authenticationScheme="Negotiate" maxReceivedMessageSize="1048576" maxBufferSize="163840" transferMode="Streamed" />
        </binding>
      </customBinding>
      <webHttpBinding>
        <binding name="EWSStreamingNegotiateHttpsBinding" transferMode="Streamed" maxReceivedMessageSize="67108864">
          <security mode="Transport">
          </security>
          <readerQuotas maxDepth="32" maxStringContentLength="8388608" maxArrayLength="8388608" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
        </binding>
        <binding name="EWSStreamingNegotiateHttpBinding" transferMode="Streamed" maxReceivedMessageSize="67108864">
          <readerQuotas maxDepth="32" maxStringContentLength="8388608" maxArrayLength="8388608" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
        </binding>
      </webHttpBinding>
    </bindings>
    <extensions>
      <bindingElementExtensions>
        <add name="EWSMessageEncoderSoap11Element" type="Microsoft.Exchange.Services.Wcf.MessageEncoderWithXmlDeclarationSoap11BindingElementExtension, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="EWSMessageEncoderSoap11WSAddressing10Element" type="Microsoft.Exchange.Services.Wcf.MessageEncoderWithXmlDeclarationSoap11WSAddressing10BindingElementExtension, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="EWSSecurityBindingElement" type="Microsoft.Exchange.Services.Wcf.SecurityBindingElementExtension, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="UMLegacyMessageEncoderSoap11Element" type="Microsoft.Exchange.Services.Wcf.UMLegacyMessageEncoderWithXmlDeclarationSoap11BindingElementExtension, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </bindingElementExtensions>
      <behaviorExtensions>
        <add name="EWSServiceCredentials" type="Microsoft.Exchange.Services.Wcf.EWSServiceCredentialsElement, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </behaviorExtensions>
    </extensions>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" minFreeMemoryPercentageToActivateService="0" />
    <client>
      <endpoint address="net.tcp://localhost:1009/Microsoft.Exchange.Security.Authentication.FederatedAuthService" binding="netTcpBinding" bindingConfiguration="SecureBinding" contract="Microsoft.Exchange.Security.Authentication.FederatedAuthService.IAuthService" name="Microsoft.Exchange.Security.Authentication.FederatedAuthService" />
    </client>
  </system.serviceModel>
  <system.webServer>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,MERGE,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="EWSAsmxHandler" path="*.asmx" verb="GET,POST" type="Microsoft.Exchange.Services.DispatchPipe.Ews.EwsServiceHttpHandlerFactory, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="integratedMode" />
      <add name="EWSDiscoveryHandler" path="*.asmx" verb="HEAD" type="Microsoft.Exchange.Services.Wcf.EWSDiscoveryHttpHandler, Microsoft.Exchange.Services.EwsHandler, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="integratedMode" />
    </handlers>
    <modules>
      <remove name="ServiceModel" />
      <add name="ServiceModel" type="System.ServiceModel.Activation.ServiceHttpModule, System.ServiceModel.Activation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="managedHandler" />
      <add name="HttpRequestFilteringModule" type="Microsoft.Exchange.HttpRequestFiltering.HttpRequestFilteringModule, Microsoft.Exchange.HttpRequestFiltering, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="RoutingUpdateModule" type="Microsoft.Exchange.HttpProxy.Routing.RoutingUpdateModule, Microsoft.Exchange.HttpProxy.Routing, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add type="Microsoft.Exchange.Services.EwsAnonymousHttpModule, Microsoft.Exchange.Services.Wcf" name="AnonymousEmptyCheck" />
      <add type="Microsoft.Exchange.Security.Authentication.BackendRehydrationModule" name="BackendRehydrationModule" />
      <add type="Microsoft.Exchange.Services.EwsBasicAuthenticationHttpModule, Microsoft.Exchange.Services" name="EwsBasicAuthenticationHandler" />
    </modules>
    <!-- We currently turn off integrated mode validation because we currently use the httpHandlers section 
        to remove the association between asmx extension and ASP.Net.  Once we update our web.config 
        file to correct the above, we can remove the validation element.
        http://msdn2.microsoft.com/en-us/library/bb422433.aspx -->
    <validation validateIntegratedModeConfiguration="false" />
    <security>
      <requestFiltering allowDoubleEscaping="true">
        <requestLimits maxAllowedContentLength="67108864" />
      </requestFiltering>
    </security>
    <httpProtocol>
      <customHeaders>
        <add name="X-DiagInfo" value="SOLO-E19A" />
        <add name="X-BEServer" value="SOLO-E19A" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
</configuration>
