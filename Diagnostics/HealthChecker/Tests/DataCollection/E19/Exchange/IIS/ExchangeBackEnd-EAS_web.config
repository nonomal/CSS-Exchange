<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="CTS" type="Microsoft.Exchange.Data.Internal.CtsConfigurationSection, Microsoft.Exchange.Data.Common, Version=15.02.1114.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="ExchangeDiagnosticsSection" type="Microsoft.Exchange.Data.ApplicationLogic.ExchangeDiagnosticsSection, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <ExchangeDiagnosticsSection>
    <DiagnosticsComponents>
      <DiagnosticsComponent name="ADDriver" implementation="Microsoft.Exchange.Data.Directory.Diagnostics.ADDriverDiagnostics, Microsoft.Exchange.Data.Directory, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="get_Instance" />
      <DiagnosticsComponent name="AirSyncInMemoryTrace" implementation="Microsoft.Exchange.AirSync.Common.AirSyncInMemoryTraceHandler, Microsoft.Exchange.AirSync.Common, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="AirSyncServiceHealth" implementation="Microsoft.Exchange.AirSync.AirSyncServiceHealthHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="AirSyncDeviceHealth" implementation="Microsoft.Exchange.AirSync.AirSyncDeviceHealthHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="EasMailboxSessionCache" implementation="Microsoft.Exchange.AirSync.EasMailboxSessionCacheHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GetConditionMetadata" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.GetConditionMetadataHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GetSyncState" implementation="Microsoft.Exchange.AirSync.GetSyncStateHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GetUserConfiguration" implementation="Microsoft.Exchange.AirSync.GetUserConfigurationHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="GlobalSettings" implementation="Microsoft.Exchange.AirSync.GlobalSettingsHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="NotificationManager" implementation="Microsoft.Exchange.AirSync.NotificationManagerHandler, Microsoft.Exchange.AirSync, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="ProcessInfo" implementation="Microsoft.Exchange.Data.ApplicationLogic.CommonHandlers.ProcessDiagnosticsInfoManager, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RegisterCondition" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.RegisterConditionHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="RemoveCondition" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.RemoveConditionHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="StandardBudgetCache" implementation="Microsoft.Exchange.WorkloadManagement.StandardBudgetCacheHandler, Microsoft.Exchange.WorkloadManagement, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="UserWorkloadManager" implementation="Microsoft.Exchange.WorkloadManagement.UserWorkloadManagerHandler, Microsoft.Exchange.WorkloadManagement, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
      <DiagnosticsComponent name="VariantConfiguration" implementation="Microsoft.Exchange.Data.ApplicationLogic.Diagnostics.SettingOverrideSyncHandler, Microsoft.Exchange.Data.ApplicationLogic, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" methodName="GetInstance" />
    </DiagnosticsComponents>
  </ExchangeDiagnosticsSection>
  <CTS>
    <TextConverters>
      <SafeUrlScheme Add="sapodt;bingnews;bingtravel;bingfinance;bingsports;bingmaps;bingweather;binghealthandfitness;bingfoodanddrink;ms-settings-workplace;companyportal;onenote;feedback-hub;windows-feedback;insiderhub" />
    </TextConverters>
  </CTS>
  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
    <linkedConfiguration href="file://C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\SharedWebConfig.config" />
  </assemblyBinding>
  <!-- These are all the Application Variables that you can use to configure the AirSync behavior -->
  <appSettings>
    <add key="UserWorkloadManager.PermitSynchronousTaskExecution" value="false" />
    <!-- Config file for tracing -->
    <add key="ExInMemoryTraceConfiguration" value="C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\Sync\EAS-EnabledInMemoryTraces.Config">
    </add>
    <!-- Number of queued requests that can be logged to the user's mailbox -->
    <add key="NumOfQueuedMailboxLogEntries" value="15">
    </add>
    <!-- Max size of data in bytes that can be logged to the user's mailbox -->
    <add key="MaxSizeOfMailboxLog" value="8000">
    </add>
    <!-- Enable verbose mode of mailbox logging -->
    <add key="EnableMailboxLoggingVerboseMode" value="false">
    </add>
    <!-- MaxNumber of Folders that you can create -->
    <add key="MaxNumOfFolders" value="1000">
    </add>
    <!-- Refresh interval in seconds of AD cache -->
    <add key="ADCacheRefreshInterval" value="60">
    </add>
    <!-- Disable any type of caching for testing. Default is false -->
    <add key="DisableCaching" value="false">
    </add>
    <!-- By Default SchemaValidation is turned on. If you want to Explicitly turn it off, set this to the string "Off" -->
    <add key="SchemaValidate" value="On">
    </add>
    <!-- If Schema Validation is turned on all the files in this particular directory with a .xsd extension are read in
                 This Value should contain the absolute Path of the directory with backward slashes escaped
        -->
    <add key="SchemaDirectory" value="C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\Sync\xsd">
    </add>
    <!-- SyncLogEnabled -->
    <add key="SyncLogEnabled" value="true">
    </add>
    <!-- The directory to store the SyncLogs into.  This folder will eventually be shared
         with OWA and other CAS modules using the SyncLog. -->
    <add key="SyncLogDirectory" value="C:\Program Files\Microsoft\Exchange Server\V15\logging\CasSyncLogs">
    </add>
    <!-- Use these settings to allow/disallow users with E12 or legacy mailboxes to sync to the server
        -->
    <add key="BlockNewMailboxes" value="false">
    </add>
    <add key="BlockLegacyMailboxes" value="false">
    </add>
    <!-- These settings control the headers we proxy back from the back-end and the virtual directory
                 that we proxy to.
        -->
    <add key="ProxyHeaders" value="PUBLIC,ALLOW,MS-SERVER-ACTIVESYNC,MS-ASPROTOCOLVERSIONS,MS-ASPROTOCOLCOMMANDS,CONTENT-TYPE,CONTENT-LENGTH,CONTENT-ENCODING">
    </add>
    <add key="ProxyVirtualDirectory" value="/Microsoft-Server-ActiveSync">
    </add>
    <!-- These settings control our back-off behavior when we detect that an E12 back-end is having problems.  The
                 timeout settings are expressed in number of seconds.
        -->
    <add key="BackOffThreshold" value="3">
    </add>
    <add key="BackOffTimeOut" value="60">
    </add>
    <add key="BackOffErrorWindow" value="60">
    </add>
    <add key="MaxRequestsQueued" value="500">
    </add>
    <!-- Sets the maximum number of search results that will be returned
             by the different search providers
        -->
    <add key="MaxGALSearchResults" value="100">
    </add>
    <add key="MaxDocumentLibrarySearchResults" value="1000">
    </add>
    <add key="MaxMailboxSearchResults" value="100">
    </add>
    <add key="MailboxSearchTimeout" value="30">
    </add>
    <add key="MailboxSearchTimeoutNoContentIndexing" value="90">
    </add>
    <!-- Max number of items that are allowed to be retrieved from ItemOperations -->
    <add key="MaxRetrievedItems" value="100">
    </add>
    <!-- Max window size for Sync -->
    <add key="MaxWindowSize" value="100">
    </add>
    <!--
            Sets the timeout values for proxy handler async calls (secs)
            Note that the long timeout is matched up with the max heart
            beat interval setting below.
        -->
    <add key="ProxyHandlerShortTimeout" value="120">
    </add>
    <add key="ProxyHandlerLongTimeout" value="3600">
    </add>
    <!--
            Sets the maximum connections that will be pooled (to the same server) while proxying
            requests from one CAS to another.
        -->
    <add key="ProxyConnectionPoolConnectionLimit" value="50000">
    </add>
    <!-- These are the maximum number of bad items that the client
                 can send up before we respond with global protocol error.
        -->
    <add key="MaxClientSentBadItems" value="4">
    </add>
    <!-- Bad Item Reports configurable text items -->
    <add key="BadItemIncludeStackTrace" value="false">
    </add>
    <add key="BadItemIncludeEmailToText" value="false">
    </add>
    <!-- Replace the text below with text in the same language as the server language-->
    <add key="BadItemEmailToText" value="">
    </add>
    <!--
            Sets the maximum data size that we will fetch (range or othewise)
        -->
    <add key="MaxDocumentDataSize" value="10240000">
    </add>
    <!--
            Sets the range of valid heartbeat interval values.
            Note: If you increase the max heartbeat interval here
            you should also increase the proxyhandler long timeout
            so proxied Ping requests will work correctly
        -->
    <add key="MinHeartbeatInterval" value="60">
    </add>
    <add key="MaxHeartbeatInterval" value="3540">
    </add>
    <!--
    The number of most recent HBIs we'll maintain for averaging.
    -->
    <add key="HeartbeatSampleSize" value="200">
    </add>
    <!--
    If the average HBI dips to this value or below, issue an event.
    -->
    <add key="HeartbeatAlertThreshold" value="540">
    </add>
    <!--
    AD cache expiration timeout in seconds.
    -->
    <add key="ADCacheExpirationTimeout" value="300">
    </add>
    <!--
    Max org count in AD cache.
    -->
    <add key="ADCacheMaxOrgCount" value="50000">
    </add>
    <!--
            Sets the maximum number of collections to add to the protocol logging.
    -->
    <add key="MaxCollectionsToLog" value="100">
    </add>
    <!--
        When true, the server will include the full server version in the
        MS-Server-ActiveSync header instead of the short version.
    -->
    <add key="FullServerVersion" value="false">
    </add>
    <!-- URL which hosts the boostrap CAB for Windows Mobile 6.1 -->
    <add key="BootstrapCABForWM61HostingURL" value="http://go.microsoft.com/fwlink/?LinkId=150061" />
    <!-- URL which provides information about setting up Windows Mobile phone to receive updates for Outlook Mobile -->
    <add key="MobileUpdateInformationURL" value="http://go.microsoft.com/fwlink/?LinkId=143155" />
    <!--
        Bootstrap mail delivery delay in seconds. Default is 259200 (= 3 days.)
        Windows Mobile 6.1 device needs some time before running a bootstrap CAB.
    -->
    <add key="BootstrapMailDeliveryDelay" value="259200">
    </add>
    <!-- Path to store files used by TemporaryDataStorage for item conversion -->
    <add key="TemporaryStoragePath" value="C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\Sync\Temp" />
    <!--Reliable notification polling interval in seconds-->
    <add key="EventQueuePollingInterval" value="5">
    </add>
    <!--The amount of time (in seconds) to delay HTTP 503 (and equivalent status codes) responses -->
    <add key="ErrorResponseDelay" value="20">
    </add>
    <!--The maximum amount of time (in seconds) that a request is allowed to be delayed by the throttling logic -->
    <add key="MaxThrottlingDelay" value="45">
    </add>
    <!-- DeviceClassCache max start delay in seconds: 6 * 60 * 60, i.e. 6 hours -->
    <add key="DeviceClassCacheMaxStartDelay" value="21600">
    </add>
    <!-- DeviceClassCache max AD objects that can be uploaded in one refresh run -->
    <add key="DeviceClassCacheMaxADUploadCount" value="300">
    </add>
    <!-- DeviceClassCache per-org refresh interval in seconds: 3 * 60 * 60, i.e. 3 hours -->
    <add key="DeviceClassCachePerOrgRefreshInterval" value="10800">
    </add>
    <!-- DeviceClassCache max number of deviceclass nodes created under each org -->
    <add key="DeviceClassPerOrgMaxADCount" value="1000">
    </add>
    <!-- DeviceClassCache how long the deviceclass objects can exist in AD -->
    <!-- before they get cleaned up in days: 90, i.e. 3 months -->
    <add key="DeviceClassCacheADCleanupInterval" value="90">
    </add>
    <!-- RMS Template cache settings -->
    <add key="RmsTemplateCacheSizeInMB" value="10" />
    <add key="RmsTemplateCacheExpirationInterval" value="01:00:00" />
    <!-- Budget action maximum elapsed times before logging -->
    <add key="Connection_MaxTimeInMinutes" value="720" />
    <add key="CAS_MaxTimeInMinutes" value="720" />
    <!-- Specifies the type of protocol that RUM should register itself as. -->
    <add key="RoutingUpdateModule.ProtocolType" value="EAS" />
  </appSettings>
  <system.web>
    <!-- Allow maximum 10 megs of content; disable File Change Notification to prevent auto-recycle on file updates -->
    <httpRuntime maxRequestLength="10240" fcnMode="Disabled" />
    <authentication mode="Windows" />
    <!--  DYNAMIC DEBUG COMPILATION
            Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
            false will improve runtime performance of this application.
            Set compilation debug="true" to insert debugging symbols (.pdb information)
            into the compiled page. Because this creates a larger file that executes
            more slowly, you should set this value to true only when debugging and to
            false at all other times. For more information, refer to the documentation about
            debugging ASP.NET files.
        -->
    <compilation defaultLanguage="c#" debug="false">
      <assemblies>
        <add assembly="Microsoft.Exchange.Security, Version=15.0.0.0, Culture=neutral, publicKeyToken=31bf3856ad364e35" />
        <add assembly="Microsoft.Exchange.Data.Common, Version=15.02.1114.0, Culture=neutral, publicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <!-- We will run under the context of the Exchange Server since eventually the Mailbox server -->
    <!-- will authorize the user -->
    <identity impersonate="false" />
    <customErrors mode="On" />
  </system.web>
  <system.net>
    <!-- Dont use the system default proxy settings and always bypass proxy for local -->
    <defaultProxy>
      <proxy bypassonlocal="true" usesystemdefault="false" />
    </defaultProxy>
  </system.net>
  <system.webServer>
    <modules>
      <add name="HttpRequestFilteringModule" type="Microsoft.Exchange.HttpRequestFiltering.HttpRequestFilteringModule, Microsoft.Exchange.HttpRequestFiltering, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="RoutingUpdateModule" type="Microsoft.Exchange.HttpProxy.Routing.RoutingUpdateModule, Microsoft.Exchange.HttpProxy.Routing, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="CasHealthModule" type="Microsoft.Exchange.Common.ExWebHealthModule,Microsoft.Exchange.Common, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="BackendRehydrationModule" type="Microsoft.Exchange.Security.Authentication.BackendRehydrationModule" />
    </modules>
    <handlers>
      <add name="AirSyncHandler" verb="*" path="*" type="Microsoft.Exchange.AirSyncHandler.Handler, Microsoft.Exchange.AirSyncHandler" />
    </handlers>
    <httpProtocol>
      <customHeaders>
        <add name="X-DiagInfo" value="SOLO-E19A" />
        <add name="X-BEServer" value="SOLO-E19A" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="SecureBinding" maxConnections="100000">
          <security mode="Transport">
            <transport protectionLevel="EncryptAndSign" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:1009/Microsoft.Exchange.Security.Authentication.FederatedAuthService" binding="netTcpBinding" bindingConfiguration="SecureBinding" contract="Microsoft.Exchange.Security.Authentication.FederatedAuthService.IAuthService" name="Microsoft.Exchange.Security.Authentication.FederatedAuthService" />
    </client>
  </system.serviceModel>
</configuration>
