<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.diagnostics>
    <sources>
      <source name="System.Runtime.Serialization" switchValue="Warning, Error, Critical">
        <listeners>
          <add name="System.Runtime.Serialization" type="System.Diagnostics.EventLogTraceListener" initializeData="System.Runtime.Serialization" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <location inheritInChildApplications="false">
    <system.net>
      <defaultProxy>
        <proxy usesystemdefault="true" bypassonlocal="true" />
        <bypasslist>
          <add address=".*" />
        </bypasslist>
      </defaultProxy>
    </system.net>
    <system.webServer>
      <!-- allows the server to data stream immediately from client-->
      <serverRuntime uploadReadAheadSize="0" />
      <httpErrors errorMode="Custom">
        <remove statusCode="500" subStatusCode="-1" />
        <remove statusCode="503" subStatusCode="-1" />
        <remove statusCode="404" subStatusCode="-1" />
        <error statusCode="404" path="/owa/auth/errorFE.aspx?httpCode=404" responseMode="ExecuteURL" />
        <error statusCode="500" path="/owa/auth/errorFE.aspx?httpCode=500" responseMode="ExecuteURL" />
        <error statusCode="503" path="/owa/auth/errorFE.aspx?httpCode=503" responseMode="ExecuteURL" />
      </httpErrors>
      <httpProtocol>
        <customHeaders>
          <add name="X-DiagInfo" value="SOLO-E19A" />
          <add name="X-BEServer" value="SOLO-E19A" />
          <add name="X-UA-Compatible" value="IE=EmulateIE7" />
        </customHeaders>
      </httpProtocol>
      <!-- OWA HTTP Modules -->
      <modules>
        <!-- CasHealthModule must always be the first one in the list -->
        <add name="CasHealthModule" type="Microsoft.Exchange.Common.ExWebHealthModule,Microsoft.Exchange.Common, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="HttpRequestFilteringModule" type="Microsoft.Exchange.HttpRequestFiltering.HttpRequestFilteringModule, Microsoft.Exchange.HttpRequestFiltering, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="RoutingUpdateModule" type="Microsoft.Exchange.HttpProxy.Routing.RoutingUpdateModule, Microsoft.Exchange.HttpProxy.Routing, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add type="Microsoft.Exchange.Security.OAuth.OAuthHttpModule" name="OAuthAuthModule" />
        <add type="Microsoft.Exchange.Security.Authentication.BackendRehydrationModule" name="BackendRehydrationModule" />
        <add name="ClientsCommonModule" type="Microsoft.Exchange.Clients.Common.ClientsCommonModule" />
        <add type="Microsoft.Exchange.Clients.Owa2.Server.Core.OwaModule, Microsoft.Exchange.Clients.Owa2.Server" name="Owa2Module" />
        <add type="Microsoft.Exchange.Clients.Owa.Core.OwaModule, Microsoft.Exchange.Clients.Owa" name="OwaModule" />
        <add name="exppw" />
      </modules>
      <handlers>
        <add verb="POST,GET" path="*.svc" type="Microsoft.Exchange.Clients.Owa2.Server.Core.OwaServiceHttpHandlerFactory, Microsoft.Exchange.Clients.Owa2.Server" name="OwaServiceHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="*.owa2" type="Microsoft.Exchange.Clients.Owa2.Server.Core.OwaEventHandlerFactory, Microsoft.Exchange.Clients.Owa2.Server" name="OwaEventHandler2" preCondition="managedHandler" />
        <add verb="GET" path="ev.owa" type="Microsoft.Exchange.Clients.Owa.Core.OwaEventHandlerFactory, Microsoft.Exchange.Clients.Owa" name="OwaEventHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="wopi/*" type="Microsoft.Exchange.Clients.Owa2.Server.Core.WacRequestHandler, Microsoft.Exchange.Clients.Owa2.Server" name="WacRequestHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="authenticatedwopi/*" type="Microsoft.Exchange.Clients.Owa2.Server.Core.AuthenticatedWopiRequestHandler, Microsoft.Exchange.Clients.Owa2.Server" name="AuthenticatedWopiRequestHandler" preCondition="managedHandler" />
        <add verb="GET,HEAD" path="attachment.ashx" type="Microsoft.Exchange.Clients.Owa.Core.AttachmentHandler, Microsoft.Exchange.Clients.Owa" name="AttachmentHandler" preCondition="managedHandler" />
        <add verb="POST" path="sessiondata.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.SessionDataHandler, Microsoft.Exchange.Clients.Owa2.Server" name="SessionDataHandler" preCondition="managedHandler" />
        <add verb="POST" path="preloadsessiondata.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.PreloadSessionDataHandler, Microsoft.Exchange.Clients.Owa2.Server" name="PreloadSessionDataHandler" preCondition="managedHandler" />
        <add verb="POST" path="remotenotification.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.RemoteNotificationHandler, Microsoft.Exchange.Clients.Owa2.Server" name="RemoteNotificationHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="Plt1.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.Plt1WebHandler, Microsoft.Exchange.Clients.Owa2.Server" name="Plt1WebHandler" preCondition="managedHandler" />
        <add verb="POST" path="speech.reco" type="Microsoft.Exchange.Clients.Owa2.Server.Core.SpeechRecognitionHandler, Microsoft.Exchange.Clients.Owa2.Server" name="SpeechRecognitionHandler" preCondition="managedHandler" />
        <add verb="GET,HEAD" path="*.ics" type="Microsoft.Exchange.Clients.Owa.Core.HttpHandlerICal, Microsoft.Exchange.Clients.Owa" name="ICalHttpHandler" preCondition="managedHandler" />
        <add verb="GET" path="appCacheManifestHandler.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.AppCacheManifestHandler, Microsoft.Exchange.Clients.Owa2.Server" name="AppCacheManifestHandler" preCondition="managedHandler" />
        <add verb="GET" path="userspecificresourceinjector.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.UserSpecificResourceInjector, Microsoft.Exchange.Clients.Owa2.Server" name="UserSpecificResourceInjector" preCondition="managedHandler" />
        <add verb="GET" path="mowapendingget.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Core.MowaPendingGetRequestHandler, Microsoft.Exchange.Clients.Owa2.Server" name="MowaPendingGetRequestHandler" preCondition="managedHandler" />
        <add verb="GET" path="groupsubscription.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.GroupSubscriptionHandler, Microsoft.Exchange.Clients.Owa2.Server" name="GroupSubscriptionHandler" preCondition="managedHandler" />
        <add verb="GET" path="processInvitation.aspx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.ProcessCalendarInvitationHandler, Microsoft.Exchange.Clients.Owa2.Server" name="ProcessInvitationHandler" preCondition="managedHandler" />
        <add verb="GET" path="serviceWorkerHandler.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.ServiceWorkerHandler, Microsoft.Exchange.Clients.Owa2.Server" name="ServiceWorkerHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="*.owa" type="Microsoft.Exchange.Clients.Owa2.Server.Core.OwaRequestHttpHandler, Microsoft.Exchange.Clients.Owa2.Server" name="OwaRequestHttpHandler" preCondition="managedHandler" />
        <add verb="POST,GET" path="userbootsettings.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.UserBootSettingsHandler, Microsoft.Exchange.Clients.Owa2.Server" name="UserBootSettingsHandler" preCondition="managedHandler" />
        <add verb="GET" path="MeetingPollHandler.ashx" type="Microsoft.Exchange.Clients.Owa2.Server.Web.MeetingPollHandler, Microsoft.Exchange.Clients.Owa2.Server" name="MeetingPollHandler" preCondition="managedHandler" />
      </handlers>
      <security>
        <requestFiltering>
          <requestLimits maxAllowedContentLength="35000000" />
        </requestFiltering>
      </security>
      <staticContent>
        <remove fileExtension=".manifest" />
        <mimeMap fileExtension=".manifest" mimeType="text/cache-manifest" />
        <remove fileExtension=".woff" />
        <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
      </staticContent>
      <caching>
        <profiles>
          <add extension=".manifest" policy="DisableCache" kernelCachePolicy="DontCache" />
          <add extension=".crx" policy="DisableCache" kernelCachePolicy="DontCache" />
        </profiles>
      </caching>
    </system.webServer>
    <system.web>
      <!-- OM:1818779 Disable file change notification for OWA -->
      <httpRuntime maxUrlLength="500" maxRequestLength="35000" requestValidationMode="2.0" enableVersionHeader="false" fcnMode="Disabled" relaxedUrlToFileSystemMapping="true" />
      <authentication mode="Windows" />
      <sessionState mode="Off" />
      <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
      <customErrors defaultRedirect="auth/errorFE.aspx" mode="On">
        <error statusCode="500" redirect="auth/errorFE.aspx?httpCode=500" />
        <error statusCode="503" redirect="auth/errorFE.aspx?httpCode=503" />
        <error statusCode="404" redirect="auth/errorFE.aspx?httpCode=404" />
      </customErrors>
      <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true" />
      <pages enableSessionState="false" enableViewState="false" enableViewStateMac="true" autoEventWireup="false" smartNavigation="false" validateRequest="false" />
      <compilation defaultLanguage="c#" debug="false">
        <assemblies>
          <!-- Any assembly not in the GAC or the owa\bin folder that is referenced from an aspx page needs to be
                added here.  An assembly can be referenced by an aspx page through a namespace import or through usage
                of a method or property that returns a type from that assembly.  aspx page compilation is similar to
                regular c# compilation where any assembly that is referenced in the code needs to be provided to the
                compiler at compile time.  These entries are our means of providing additional assembly references to
                the compiler.  All assemblies in the GAC and owa\bin are referenced automatically.
                -->
          <add assembly="AntiXSSLibrary,&#xD;&#xA;                    Version=4.2.0.0, &#xD;&#xA;                    Culture=neutral, &#xD;&#xA;                    PublicKeyToken=d127efab8a9c114f" />
          <add assembly="Microsoft.Exchange.Data.Directory,&#xD;&#xA;                    Version=15.0.0.0, &#xD;&#xA;                    Culture=neutral, &#xD;&#xA;                    PublicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Clients.Common,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Clients.Security,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.Storage,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Inference.SafetyLibrary,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.ImageAnalysis,&#xD;&#xA;                   Version=15.0.0.0,&#xD;&#xA;                   Culture=neutral,&#xD;&#xA;                   publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.HA,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.ApplicationLogic,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Data.GroupMailboxAccessLayer,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Net,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Diagnostics,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Security,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.DKM.Proxy,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Compliance,&#xD;&#xA;                    Version=15.0.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.RightsManagementServices.Core,&#xD;&#xA;                    Version=6.1.0.0,&#xD;&#xA;                    Culture=neutral,&#xD;&#xA;                    publicKeyToken=31bf3856ad364e35" />
          <!-- Send As Reference To Subscription Manager -->
          <add assembly="Microsoft.Exchange.Transport.Sync.Common,&#xD;&#xA;                      Version=15.0.0.0,&#xD;&#xA;                      Culture=neutral,&#xD;&#xA;                      publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.VariantConfiguration,&#xD;&#xA;                      Version=15.0.0.0,&#xD;&#xA;                      Culture=neutral,&#xD;&#xA;                      publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.SharePointSignalStore,&#xD;&#xA;                      Version=15.0.0.0,&#xD;&#xA;                      Culture=neutral,&#xD;&#xA;                      publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Search.Platform.Parallax,Version=3.3.0.0,Culture=neutral,publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.VariantConfiguration.Core,Version=15.0.0.0,Culture=neutral,publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.Clients.Owa2.ServerVariantConfiguration,Version=15.0.0.0,Culture=neutral,publicKeyToken=31bf3856ad364e35" />
          <add assembly="Microsoft.Exchange.VariantConfiguration.ExCore,Version=15.0.0.0,Culture=neutral,publicKeyToken=31bf3856ad364e35" />
        </assemblies>
      </compilation>
    </system.web>
  </location>
  <system.serviceModel>
    <!-- 
            This section specifies the configuration for invoking the Microsoft Online (BPOS) shell web service.
            The "???" values are specified at deployment time, as implemented in:
            sources/dev/Management/src/Management/Deployment/Components/DatacenterClientAccessComponent.xml
        -->
    <bindings>
      <wsHttpBinding>
        <binding name="MsOnlineShellService_BindingConfiguration">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
          <readerQuotas maxStringContentLength="102400" />
        </binding>
      </wsHttpBinding>
      <webHttpBinding>
        <binding name="httpsBinding" maxReceivedMessageSize="35000000">
          <readerQuotas maxDepth="32" maxStringContentLength="35000000" maxArrayLength="1048576" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
        <binding name="httpBinding" maxReceivedMessageSize="35000000">
          <readerQuotas maxDepth="32" maxStringContentLength="35000000" maxArrayLength="1048576" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </webHttpBinding>
    </bindings>
    <client>
      <endpoint name="MsOnlineShellService_EndPointConfiguration" address="???" binding="wsHttpBinding" bindingConfiguration="MsOnlineShellService_BindingConfiguration" contract="IShellService" behaviorConfiguration="MsOnlineShellService_EndPointBehavior">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>
    <services />
    <behaviors>
      <endpointBehaviors>
        <behavior name="MsOnlineShellService_EndPointBehavior">
          <clientCredentials>
            <serviceCertificate>
              <authentication certificateValidationMode="ChainTrust" revocationMode="NoCheck" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior>
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" minFreeMemoryPercentageToActivateService="0" />
  </system.serviceModel>
  <appSettings>
    <add key="OAuthHttpModule.RunningAtBackend" value="true" />
    <!-- PSDirectInvoke settings -->
    <add key="PSDirectInvokeEnabledModules" value="Logging,LatencyTracker" />
    <!-- Specifies the type of protocol that RUM should register itself as. -->
    <add key="RoutingUpdateModule.ProtocolType" value="OWA" />
    <add key="owin:AutomaticAppStartup" value="true" />
  </appSettings>
  <!-- The following entries allow fusion to load our dependent assemblies from locations outside of our application
        root, which in our case is our virtual directory root folder. The correct install path is filled in during setup.
    -->
  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
    <linkedConfiguration href="file://C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\SharedWebConfig.config" />
  </assemblyBinding>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <!-- Required to allow UCWeb.dll, built against E14, to work with E15's InstantMessaging.dll -->
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Exchange.InstantMessaging" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="14.0.0.0-14.1.0.0" newVersion="15.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\System.Spatial.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.Edm.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.OData.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Services.Client" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <codeBase version="5.6.5.0" href="file:///C:\Program Files\Microsoft\Exchange Server\V15\bin\Microsoft.Data.Services.Client.dll" />
        <bindingRedirect oldVersion="5.2.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.3.0.0" newVersion="5.6.5.0" />
        <bindingRedirect oldVersion="5.6.0.0" newVersion="5.6.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="3.0.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <location inheritInChildApplications="false" path="smime">
    <system.webServer>
      <staticContent>
        <remove fileExtension=".msi" />
        <mimeMap fileExtension=".msi" mimeType="application/octet-stream" />
        <remove fileExtension=".appxbundle" />
        <mimeMap fileExtension=".appxbundle" mimeType="application/octet-stream" />
        <remove fileExtension=".crx" />
        <mimeMap fileExtension=".crx" mimeType="application/x-chrome-extension" />
      </staticContent>
    </system.webServer>
  </location>
</configuration>
